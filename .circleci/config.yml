version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
   aws-cli: circleci/aws-cli@2.0.3

commands:  
#To be called when job fails, will delete stack created when smoke test fails,
#note: smoke test is only on circle Ci in this example not related to stack ;)
#create_infrastructure below is used with it
   # Exercise - Rollback
   destroy_environment:
    docker:
        - image: amazon/aws-cli
    steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}


# Define the jobs we want to run for this project
jobs:
  #This job is different from the next job , not related to each others, This one creates cloud formation stack. No need for ansible or a running EC2
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
              
    #This job is different from the previous job , not related to each others, This one uses running ec2 and configures on it python with ansible
  # as it uses your playbook file, and the playbook have the running EC2
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.11-rc-alpine
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #             # You can get this ID in the section where you registered the SSH Key
  #             fingerprints: ["fc:22:cd:85:f2:ea:c3:9b:e3:29:85:f2:20:3a:0d:8e"] 
  #     - run:
  #         name: Install Ansible
  #         command: |
  #           apk add --update ansible
  #     - run:
  #         name: Run Playbook and Configure server
  #         command: |
  #           ansible-playbook -i inventory.txt  main.yml
  # 
  
      # Smoke_Test This job is different from the previous jobs , not related to each others, This one just tests the url give, it is not from any ec2 or server, It is just from circle ci a simple test
  # you can make it inside a server or etc by configuring connection steps inside the job first as previous jobs then typing this command
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blogg.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              echo "working"
              return 0
            else
              echo "not working"
              return 1
            fi
      - destroy_environment 

# Sequential workflow
workflows:
  # Name the workflow here
  myWorkflow:
    jobs:
        - create_infrastructure
     #  s- configure_infrastructure
        - smoke_test:
              requires:
                - create_infrastructure
